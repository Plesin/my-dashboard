import React from "react";
import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import { Dashlet } from "~/components/Dashlet";

// import { api } from "~/utils/api";

export default function Home() {
  const { data: sessionData } = useSession();
  // const hello = api.post.hello.useQuery({ text: "from tRPC" });

  return (
    <>
      <Head>
        <title>My Dashboard</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <header className="my-5">
          <AuthShowcase />
        </header>
        {sessionData ? (
          <div className="container">
            <div className="grid grid-cols-1 gap-8 lg:grid-cols-2">
              <Dashlet title="Test Dashlet">
                {`Lorem Ipsum is simply dummy text of the printing and typesetting
            industry. Lorem Ipsum has been the industry's standard dummy text
            ever since the 1500s, when an unknown printer took a galley of type
            and scrambled it to make a type specimen book. It has survived not
            only five centuries, but also the leap into electronic typesetting,
            remaining essentially unchanged.`}
              </Dashlet>
              <Dashlet title="Test Dashlet">
                {`Lorem Ipsum is simply dummy text of the printing and typesetting
            industry. Lorem Ipsum has been the industry's standard dummy text
            ever since the 1500s, when an unknown printer took a galley of type
            and scrambled it to make a type specimen book. It has survived not
            only five centuries, but also the leap into electronic typesetting,
            remaining essentially unchanged.`}
              </Dashlet>
            </div>
          </div>
        ) : null}
      </main>
    </>
  );
}

function AuthShowcase() {
  const { data: sessionData } = useSession();

  return (
    <div className="flex flex-row items-center justify-center gap-4 text-center text-2xl text-white">
      {sessionData ? (
        <>
          <img
            src={sessionData.user.image}
            className="h-10 w-10 rounded-full"
            alt="user avatar"
            loading="lazy"
          />
          <span>{sessionData.user?.name}</span>
          <span>{sessionData.user?.email}</span>
        </>
      ) : null}
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
}
